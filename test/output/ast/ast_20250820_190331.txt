# Rust-like语言语法树 (AST)
# Generated by Rust-like Compiler

▼ 🏛️ Program (1)
  ▼ 🏛️ FunctionDecl (1)
    ▼ 属性
      token:
  Token(IDENTIFIER, 'main', L1C4)
      return_type: "i32"
      name: "main"
    ▼ 📦 FunctionExpr (3)
      ▼ 📝 LetDecl (2)
        ● 🔢 Number
          ▼ 属性
            token: Token(NUMBER, 42, L2C17)
        ● 📦 VariableInternalDecl
          ▼ 属性
            mutable: True
            name: Token(IDENTIFIER, 'x', L2C13)
      ▼ ➡️ Assign (2)
        ▼ ⚡ BinaryOp (2)
          ▼ 属性
            op_token: Token(PLUS, '+', L3C11)
          ● 🏷️ Identifier
            ▼ 属性
              token: Token(IDENTIFIER, 'x', L3C9)
              name: "x"
          ● 🔢 Number
            ▼ 属性
              token: Token(NUMBER, 1, L3C13)
        ● 🏷️ Identifier
          ▼ 属性
            token: Token(IDENTIFIER, 'x', L3C5)
            name: "x"
      ▼ 🔀 If (3)
        ▼ ⚡ BinaryOp (2)
          ▼ 属性
            op_token: Token(GT, '>', L4C10)
          ● 🏷️ Identifier
            ▼ 属性
              token: Token(IDENTIFIER, 'x', L4C8)
              name: "x"
          ● 🔢 Number
            ▼ 属性
              token: Token(NUMBER, 40, L4C12)
        ▼ 📄 Block (1)
          ▼ ↩️ Return (1)
            ● 🏷️ Identifier
              ▼ 属性
                token: Token(IDENTIFIER, 'x', L5C16)
                name: "x"
        ▼ 📄 Block (1)
          ▼ ↩️ Return (1)
            ● 🔢 Number
              ▼ 属性
                token: Token(NUMBER, 0, L7C16)
