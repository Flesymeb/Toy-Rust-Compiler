# 抽象语法树 (Abstract Syntax Tree)
# 生成时间: 2025-08-20 19:38:29.431527

ProgramNode
  FunctionDeclNode: token=Token(IDENTIFIER, 'main', L2C4), return_type=None, body=BlockNode([LetDeclNode(VarInternalDecl(mut a) = Number(1)), LetDeclNode(VarInternalDecl(mut b) = IfExprNode(cond=BinOp(Ident(a) > Number(0)), then=FuncExprNode([ExprStmtNode(Number(1))]), else=FuncExprNode([ExprStmtNode(Number(0))])))]), name=main
    BlockNode
      LetDeclNode: var_internal_decl=VarInternalDecl(mut a), var_type=None, init_expr=Number(1)
      LetDeclNode: var_internal_decl=VarInternalDecl(mut b), var_type=None, init_expr=IfExprNode(cond=BinOp(Ident(a) > Number(0)), then=FuncExprNode([ExprStmtNode(Number(1))]), else=FuncExprNode([ExprStmtNode(Number(0))]))
